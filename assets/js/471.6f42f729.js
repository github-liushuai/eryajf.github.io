(window.webpackJsonp=window.webpackJsonp||[]).push([[471],{1054:function(s,t,a){"use strict";a.r(t);var e=a(9),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Golang 中使用 Mongo 时经常会写")]),s._v(" "),a("div",{pre:!0},[a("p",[a("code",[s._v('bson.D{{"key", "value"}}')]),s._v(" 这种内容，然后 VS Code 中就会得到大量PROBLEMS，并且老有波浪线的提示，有两种方式能够解决，一种是将结构体补全，一种是禁用掉这种检测。")]),s._v(" "),a("h2",{pre:!0,attrs:{id:"补全结构体"}},[a("a",{pre:!0,attrs:{class:"header-anchor",href:"#补全结构体"}},[s._v("#")]),s._v(" 补全结构体")]),s._v(" "),a("p",[s._v("补全结构体就是将如上的bson写成如下方式就不会报了：")]),s._v(" "),a("div",{pre:!0,attrs:{class:"language-go line-numbers-mode"}},[a("pre",{pre:!0,attrs:{"v-pre":"",class:"language-go"}},[a("code",[s._v("bson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{pre:!0,attrs:{class:"line-numbers-wrapper"}},[a("span",{pre:!0,attrs:{class:"line-number"}},[s._v("1")]),a("br")])])]),a("p",[s._v("这种写法固然可以，不过当嵌套多的时候，写起来会比较费劲儿，因此这里推荐第二种方式。")]),s._v(" "),a("h2",{attrs:{id:"关闭检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭检测"}},[s._v("#")]),s._v(" 关闭检测")]),s._v(" "),a("p",[s._v("通过命令行打开"),a("code",[s._v("setting.json")]),s._v("：")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://t.eryajf.net/imgs/2022/01/d6fa4a9f2f285f91.png",alt:""}})]),s._v(" "),a("p",[s._v("然后添加如下内容：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("\t"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"gopls"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"analyses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"composites"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关闭MongoDB的composites分析")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后再回来看检测就不会有这个提示了。")]),s._v(" "),a("ul",[a("li",[s._v("参考：\n"),a("ul",[a("li",[s._v("https://blog.51cto.com/u_15310543/4753519")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://stackoverflow.com/questions/54548441/composite-literal-uses-unkeyed-fields",target:"_blank",rel:"noopener noreferrer"}},[s._v("Composite literal uses unkeyed fields"),a("OutboundLink")],1)])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);